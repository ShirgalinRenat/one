		@Test
	void testn5() {
		/**
		 * Максимальная мощность 110.
		 * Напряжение сети 220.
		 * Необходимый коэффициент для расчёта 1.2.
		 */
		  float k5=(float)110,r5=(float) 220;
			/**
			   * итоговая проверка, tests и result1 сравниваются на равенство.
			   */
	    assertEquals((float)0.6, Calculation.sums(k5,r5));
	   /**
		* Окончание теста расчёта номинала в электрической цепи для жилых помещений.
		*/
	}
	@Test
	void testn6() {
	    /**
		 * Максимальная мощность 7600.
		 * Напряжение сети 380.
		 * Необходимый коэффициент для расчёта 1.2.
		 */
		  float k6=(float)7600,r6=(float) 380;
			/**
			   * итоговая проверка, tests и result2 сравниваются на равенство.
			   */
		assertEquals((float)24,Calculation.sums(k6,r6));
		/**
		* Окончание теста расчёта номинала в электрической цепи для производственных помещений.
		*/
        @Test
	void testn7() {
		/**
		 * Максимальная мощность 143.
		 * Напряжение сети 220.
		 * Необходимый коэффициент для расчёта 1.2.
		 */
		  float k7=(float)143,r7=(float) 220;
			/**
			   * итоговая проверка, tests и result1 сравниваются на равенство.
			   */
	    assertEquals((float)0.78, Calculation.sums(k7,r7));
	   /**
		* Окончание теста расчёта номинала в электрической цепи для жилых помещений.
		*/
	}
	@Test
	void testn8() {
	    /**
		 * Максимальная мощность 5700.
		 * Напряжение сети 380.
		 * Необходимый коэффициент для расчёта 1.2.
		 */
		  float k8=(float)5700,r8=(float) 380;
			/**
			   * итоговая проверка, tests и result2 сравниваются на равенство.
			   */
		assertEquals((float)18, Calculation.sums(k8,r8));
		/**
		* Окончание теста расчёта номинала в электрической цепи для производственных помещений.
		*/
		
	}
	/**
	 * Окончание создания класса для расчёта номинала в электрической цепи для жилых помещений.
	 */	
}
